{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","apply","store","createStore","fetchDataFailed","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","wrap","_context","prev","next","getState","methods","call","sent","t0","console","log","stop","_x","connectFailed","updateAccount","_ref2","_callee2","_context2","_x2","Screen","styled","div","_templateObject","_taggedTemplateLiteral","image","concat","SpacerXSmall","_templateObject2","SpacerSmall","_templateObject3","SpacerMedium","_templateObject4","SpacerLarge","_templateObject5","Container","_templateObject6","flex","_ref3","fd","_ref4","jc","_ref5","ai","_ref6","test","_ref7","TextTitle","p","_templateObject7","TextDescription","_templateObject8","_templateObject9","_templateObject10","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","a","App","input","len","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","claimingNft","setClaimingNft","_useState3","_useState4","feedback","setFeedback","_useState5","_useState6","mintAmount","setMintAmount","_useState7","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","_useState8","CONFIG","SET_CONFIG","getData","getConfig","configResponse","config","fetch","headers","Accept","json","useEffect","_jsx","s","children","_jsxs","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","substring","Number","_Fragment","onClick","e","preventDefault","abiResponse","abi","_window","ethereum","accounts","SmartContractObj","window","isMetaMask","Web3EthContract","setProvider","Web3","request","method","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","transform","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.5e64bfbc.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 10) {\r\n      newMintAmount = 10;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\r\n      >\r\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              backgroundColor: \"var(--accent)\",\r\n              padding: 24,\r\n              borderRadius: 24,\r\n              border: \"4px dashed var(--secondary)\",\r\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n            }}\r\n          >\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 50,\r\n                fontWeight: \"bold\",\r\n                color: \"var(--accent-text)\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n              }}\r\n            >\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\r\n              </StyledLink>\r\n            </s.TextDescription>\r\n            <s.SpacerSmall />\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerMedium />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {mintAmount}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg\r\n              alt={\"example\"}\r\n              src={\"/config/images/example.gif\"}\r\n              style={{ transform: \"scaleX(-1)\" }}\r\n            />\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            Make sure you are connected to the right network (\r\n            {CONFIG.NETWORK.NAME} Mainnet) .\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\r\n            successfully mint your NFT. We recommend that you don't lower the\r\n            gas limit.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}